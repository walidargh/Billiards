{"version":3,"sources":["webpack:///webpack/bootstrap 7d63b3098ec214c3e916","webpack:///./lib/billiards.js","webpack:///./lib/game.js","webpack:///./lib/ball.js","webpack:///./lib/util.js","webpack:///./lib/cue.js","webpack:///./lib/weapon.js","webpack:///./lib/gameView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC,E;;;;;;ACbD;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH,GAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,0C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;;AAEF,iBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA,G;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC/UA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,2EAA0E;AAC1E;AACA,2EAA0E;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,uB;;;;;;ACzKA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,8C;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;AAIL;;AAEA,uB;;;;;;AChGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,sB;;;;;;ACxFA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA,yB;;;;;;AC1DA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,G;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA,2B","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7d63b3098ec214c3e916\n **/","var Game = require('./game');\nvar GameView = require('./gameView');\n\n\tconsole.log('content loaded');\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\tvar canvasEl = document.getElementsByTagName(\"canvas\")[0];\n\tcanvasEl.width = Game.DIM_X;\n\tcanvasEl.height  = Game.DIM_Y;\n\n\tvar ctx = canvasEl.getContext(\"2d\");\n\tvar game = new Game();\n\tnew GameView(game, ctx).start();\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/billiards.js\n ** module id = 0\n ** module chunks = 0\n **/","var Ball = require('./ball');\nvar Util = require('./util');\nvar Cue =  require('./cue');\nvar Weapon = require('./weapon');\n\n\nvar Game = function () {\n\tthis.balls = {};\n\n\tthis.populateTable();\n\tthis.cue = new Cue ();\n\tthis.over = false;\n\tthis.weapons = [];\n\tthis.getWeapons();\n\tthis.weaponAction();\n};\n\nGame.DIM_X = 1000;\nGame.DIM_Y = 500;\nGame.FPS = 32;\nGame.BG_COLOR = \"#006400\";\nGame.positions =\n{\n\t1: [Game.DIM_X/2 + 4*10, Game.DIM_Y/2],\n\n\t2: [Game.DIM_X/2 + 2*10, Game.DIM_Y/2 - 1*10],\n\t3: [Game.DIM_X/2 + 2*10, Game.DIM_Y/2 + 1*10],\n\n\t4: [Game.DIM_X/2 + 0*10, Game.DIM_Y/2 - 2*10],\n\t5: [Game.DIM_X/2 + 0*10, Game.DIM_Y/2 - 0*10],\n\t6: [Game.DIM_X/2 + 0*10, Game.DIM_Y/2 + 2*10],\n\n\t7: [Game.DIM_X/2 - 2*10, Game.DIM_Y/2 - 3*10],\n\t8: [Game.DIM_X/2 - 2*10, Game.DIM_Y/2 - 1*10],\n\t9: [Game.DIM_X/2 - 2*10, Game.DIM_Y/2 + 1*10],\n\t10: [Game.DIM_X/2 - 2*10, Game.DIM_Y/2 + 3*10],\n\n\t11: [Game.DIM_X/2 - 4*10, Game.DIM_Y/2 - 4*10],\n\t12: [Game.DIM_X/2 - 4*10, Game.DIM_Y/2 - 2*10],\n\t13: [Game.DIM_X/2 - 4*10, Game.DIM_Y/2 + 0*10],\n\t14: [Game.DIM_X/2 - 4*10, Game.DIM_Y/2 + 2*10],\n\t15: [Game.DIM_X/2 - 4*10, Game.DIM_Y/2 + 4*10]\n}\n\nGame.prototype.findBall = function (value) {\n\treturn this.balls[value];\n};\n\nGame.prototype.getWeapons = function () {\n\tvar types = ['Bomb'];\n\tthis.weapons.push(new Weapon({\n\t\ttype: types[0],\n\t\tgame: this\n\t}\n\t));\n};\n\nGame.prototype.populateTable = function () {\n\tvar game = this;\n\tgame.balls = {};\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tvar suit;\n\t\t\tvar color = null;\n\t\t\tvar position\n\t\t\tif (i === 0) {\n\t\t\t\tsuit = \"cue\";\n\t\t\t\tcolor = \"#FFFFFF\";\n\t\t\t\tposition = [3*Game.DIM_X/4, Game.DIM_Y/2];\n\t\t\t} else {\n\t\t\t\t\t\tsuit = \"striped\";\n\t\t\t\t\t\tposition = Game.positions[i];\n\t\t\t\t\t}\n\t\t\tgame.balls[i] = (new Ball(\n\t\t\t\t{\n\t\t\t\t\tposition: position,\n\t\t\t\t\t// velocity: [1*(2*Math.random() - 1), 1*(2*Math.random() - 1)],\n\t\t\t\t\tvelocity: [0, 0],\n\t\t\t\t\tnumber: i,\n\t\t\t\t\tsuit: suit,\n\t\t\t\t\tgame: game,\n\t\t\t\t\tcolor: color\n\t\t\t\t}\n\n\t\t\t));\n\t\t}\n};\n\nGame.prototype.isOutOfBounds = function(ball) {\n\tif (ball.position[0] > Game.DIM_X - ball.radius) {\n\t\tthis.backInFrame(\n\t\t\tball, [ball.position[0] - Game.DIM_X + ball.radius, 0]\n\t\t);\n\t\treturn [-1, 1];\n\t}\n\telse if (ball.position[0] < ball.radius) {\n\t\tthis.backInFrame(\n\t\t\tball, [ball.radius - ball.position[0], 0]\n\t\t);\n\t\treturn [-1, 1];\n\t}\t\n\telse if (ball.position[1] > Game.DIM_Y - ball.radius) {\n\t\tthis.backInFrame(\n\t\t\tball, [0, ball.position[1] - Game.DIM_Y + ball.radius]\n\t\t);\n\t\treturn [1, -1];\n\t}\n\telse if (ball.position[1] < ball.radius) {\n\t\tthis.backInFrame(\n\t\t\tball, [0, ball.radius - ball.position[1]]\n\t\t);\n\t\treturn [1, -1];\n\t}\n\telse {\n\t\treturn false;\n\t}\n};\n\nGame.prototype.step = function (deltaTime, ctx) {\n\tthis.checkMakes();\n\tthis.moveAll(deltaTime);\n\tthis.checkCollisions();\n\tif (this.cueBallStopped()) {\n\t\tvar cueBall = this.findBall(0);\n\t\tthis.cue.place(cueBall, ctx);\n\t}\n};\n\nGame.prototype.moveAll = function (deltaTime) {\n\tvar self = this;\n\tObject.keys(this.balls).forEach(function (i) {\n\t\tself.balls[i].move(deltaTime);\n\t});\n};\n\n\nGame.prototype.draw = function (ctx) {\n\tctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\tctx.fillStyle = Game.BG_COLOR;\n\tctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n\tctx.fillStyle = \"#000000\";\n\t\n\tctx.beginPath();\n\tctx.arc(\n\t\t14, 14, 14, 0, 2 * Math.PI, true\n\t);\n\tctx.fill();\n\n\tctx.beginPath();\n\tctx.arc(\n\t\t14, Game.DIM_Y - 14, 14, 0, 2 * Math.PI, true\n\t);\n\tctx.fill();\n\n\tctx.beginPath();\n\tctx.arc(\n\t\tGame.DIM_X - 14, 14, 14, 0, 2 * Math.PI, true\n\t);\n\tctx.fill();\n\n\tctx.beginPath();\n\tctx.arc(\n\t\tGame.DIM_X - 14, Game.DIM_Y - 14, 14, 0, 2 * Math.PI, true\n\t);\n\tctx.fill();\n\n\n\tvar self = this;\n\tObject.keys(self.balls).forEach(function (i) {\n\t\tself.balls[i].draw(ctx);\n\t});\n\n};\n\nGame.prototype.velocities = function () {\n\tvar velocities = {};\n\tvar self = this;\n\tObject.keys(self.balls).forEach(function (i) {\n\t\tvelocities[i] = self.balls[i].velocity;\n\t\t// var ball = self.balls[i];\n\t\t// velocities.push(ball.velocity);\n\t});\n\treturn velocities;\n};\n\nGame.prototype.positions = function () {\n\tvar positions = {};\n\tvar self = this;\n\tObject.keys(self.balls).forEach(function (i) {\n\t\t// var ball = self.balls[i];\n\t\tpositions[i] = self.balls[i].position;\n\t});\n\treturn positions;\n};\n \nGame.prototype.checkCollisions = function () {\n\tvar initialVelocities = this.velocities();\n\tvar initialPositions = this.positions();\n\tvar self = this;\n\n\tObject.keys(self.balls).forEach(function (i) {\n\t\tvar ball = self.balls[i];\n\t\tObject.keys(self.balls).forEach(function (j) {\n\t\t\tvar otherBall = self.balls[j];\n\t\t\tif (ball === otherBall) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ball.isCollidedWith(otherBall)) {\n\t\t\t\tball.ballCollision(\n\t\t\t\t\tinitialVelocities[otherBall.number], \n\t\t\t\t\tinitialPositions[otherBall.number]\n\t\t\t\t);\n\t\t\t}\n\n\t\t});\n\t});\n\n};\n\nGame.prototype.allStopped = function () {\n\t// var balls = this.balls;\n\tconsole.log(Object.keys(this.balls));\n\tvar self = this;\n\tvar length = Object.keys(self.balls).length;\n\tfor (var i = length- 1; i >= 0; i--) {\n\t\tvar ballSpeed = Util.norm(self.balls[i].velocity);\n\t\tif (ballSpeed !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nGame.prototype.cueBallStopped = function () {\n\tvar cueBall = this.findBall(0);\n\tvar cueBallSpeed = Util.norm(cueBall.velocity);\n\tif (cueBallSpeed) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n};\nGame.prototype.checkMakes = function () {\t\n\tvar self = this;\n\tvar toRemove = [];\n\tvar gameLost = false;\n\n\tObject.keys(this.balls).forEach(function (i) {\n\t\tif (self.inHole(self.balls[i])) {\n\t\t\ttoRemove.push(self.balls[i]);\n\t\t}\n\t});\n\n\tfor (var i = 0; i < toRemove.length; i++) {\n\t\t if (toRemove[i].number === 0) {\n\t\t \t\tgameLost = true;\n\t\t }\n\t\t self.removeBall(toRemove[i]);\n\t}\n\n\tif (Object.keys(this.balls).length === 1 && !gameLost) {\n\t\talert('Game Over You Win!');\n\t\tself.over = true;\n\t\tself.populateTable();\n\t}\n\n\tif (gameLost) {\n\t\talert('Game Over You Lose!');\n\t\tself.over = true;\n\t\tself.populateTable();\n\t}\n};\n\nGame.prototype.inHole = function (ball) {\n\tvar x = ball.position[0];\n\tvar y = ball.position[1];\n\n\tvar minX = 4*ball.radius;\n\tvar maxX = Game.DIM_X - 4*ball.radius;\n\tvar minY = 4*ball.radius;\n\tvar maxY = Game.DIM_Y - 4*ball.radius;\n\n\tvar inHole = false;\n\t//TOPLEFT [0, 0] range = ball.radius * 2\n\tif ( x < minX && y < minY) {\n\t\tinHole = true;\n\t\t// Game.removeBall(ball)\n\t//TOPRIGHT [0 + 2.5*ball.radius, Game.DIM_X - 2.5*ball.radius] \n\t} else if ( x > maxX && y < minY ) {\n\t\tinHole = true;\n\t\t// Game.removeBall(ball)\n\t//BOTTOMLEFT [0, DIM_Y]\n\t} else if ( x < minX && y > maxY) {\n\t\tinHole = true;\n\t\t//BOTTOM RIGHT\n\t} else if ( x > maxX && y > maxY) {\n\t\tinHole = true;\n\t} \n\treturn inHole;\n};\n\nGame.prototype.removeBall = function (ballToRemove) {\n\tvar newBalls = {};\n\tvar self = this;\n\tObject.keys(self.balls).forEach(function (ballNumber) {\n\t\tvar ball = self.balls[ballNumber];\n\t\tif (ball !== ballToRemove) {\n\t\t\tnewBalls[ballNumber] = ball;\n\t\t}\n\t});\n\tthis.balls = newBalls;\n};\n\nGame.prototype.weaponAction = function () {\n\tvar selectedWeapon = \n\t\tthis.weapons[Math.floor(Math.random() * this.weapons.length)];\n\tselectedWeapon.place();\n};\n\nGame.prototype.backInFrame = function (ball, distance) {\n\tvar scaledVelocity;\n\tif (distance[0]) {\n\t\tscaledVelocity = \n\t\t\tUtil.scale(ball.velocity, distance[0]/Math.abs(ball.velocity[0]));\n\t} else {\n\t\tscaledVelocity = \n\t\t\tUtil.scale(ball.velocity, distance[1]/Math.abs(ball.velocity[1]));\n\t}\n\tball.position = Util.subtract(ball.position, scaledVelocity);\n};\n\nmodule.exports = Game;\n\nwindow.game = Game;\nwindow.balls = Game.balls;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","var Util = require('./util');\n\nvar RADIUS = 7;\nvar GRAVITY = 3209/(Math.pow(1000,2));\nvar COLOR = \"#FF0000\";\n\nvar Ball = function (options) {\n\tthis.position = options.position;\n\tthis.velocity = options.velocity;\n\tthis.radius = RADIUS;\n\tthis.number = options.number;\n\tthis.suit = options.suit;\n\tthis.color = options.color || COLOR;\n\tthis.game = options.game;\n};\n\n// i = 0 is white ball\n\nBall.prototype.collideWith = function (otherBall) {\n\n};\n\nBall.prototype.draw = function (ctx) {\n\tctx.fillStyle = this.color;\n\n\tctx.beginPath();\n\tctx.arc(\n\t\tthis.position[0], this.position[1], RADIUS, 0, 2 * Math.PI, true\n\t);\n\tctx.fill();\n};\n\nBall.prototype.isCollidedWith = function (otherBall) {\n\tvar distanceBetween = Util.distance(this.position, otherBall.position);\n\t// console.log(distanceBetween);\n\tif (distanceBetween < (this.radius + otherBall.radius)) { \n\t\t// debugger\n\t\t// var overLap = 2*this.radius - distanceBetween;\n\t\t// var moveBackDistance = overLap/2;\n\t\t// var scaleFactorA = -1*moveBackDistance/Util.norm(this.velocity);\n\t\t// var scaleFactorB = -1*moveBackDistance/Util.norm(otherBall.velocity);\n\t\t// var backUpVectorA = Util.scale(this.velocity, scaleFactorA);\n\t\t// var backUpVectorB = Util.scale(otherBall.velocity, scaleFactorB);\n\t\t// this.position = Util.add(this.position, backUpVectorA);\n\t\t// otherBall.position = Util.add(otherBall.position, backUpVectorB);\n\n\n\t\t// var angleA = Util.angleCorrection(this.velocity, Util.angle(this.velocity));\n\t\t// var angleB = Util.angleCorrection(otherBall.velocity, Util.angle(otherBall.velocity));\n\t\t// var shiftA = [-(overLap/2)*Math.cos(angleA), (overLap/2)*Math.sin(angleA)];\n\t\t// var shiftB = [-(overLap/2)*Math.cos(angleB), (overLap/2)*Math.sin(angleB)];\n\t\t// var scaleB = Util.norm(otherBall.velocity)/(distanceBetween/2);\n\t\t// var scaledVelocityA = Util.scale(this.velocity, scaleA);\n\t\t// var scaledVelocityB = Util.scale(this.velocity, scalleB);\n\t\t// debugger\n\n\t\t// if (angleA !== angleA) {alert(angleA)}\n\t\t// this.position = Util.add(this.position, shiftA);\n\t\t// otherBall.position = Util.add(otherBall.position, shiftB);\n\t\treturn true;\n\t}\n\treturn false;\n\n};\n\n// http://billiards.colostate.edu/threads/physics.html\nvar NORMAL_FRAME_TIME_DELTA = 1000/60;\nvar BALL_TABLE_FRICTION = 0.25;\n// or var TABLE_FRICTION = rand(0.15, 0.4)\n// add ball-ball FRICTION = rand(0.03, 0.08)\n// add ball-cue FRICTION = 0.6\n// add ball-rail FRICTION = ball-table friction (i.e. sliding along)\nvar BALL_RAIL_RESTITUTION = 0.75;\n// var BALL_RAIL_RESTITUTION = rand(0.6 - 0.9)\nvar BALL_BALL_RESTITUTION = 0.95;\n// var BALL_BALL_RESTITUTION = rand(0.92 - 0.98)\nvar BALL_CUE_RESTITUTION = 0.84;\n// var BALL_CUE_RESTITUTION = rand(0.81 - 0.87);\n// touch: 1.5 mph = 2.2 fps\n// slow: 3 mph = 4.4 fps\n// medium-soft: 5 mph = 7.3 fps\n// medium: 7 mph = 10 fps\n// medium-fast: 8 mph = 12 fps\n// fast: 12 mph = 18 fps \n// power: 15-20 mph = 22-29 fps\n// powerful break: 25-30 mph = 36-44 fps\n// gravity = 9.8 m/s \n// gonna need to track direction, so that I can decrease velocity in the correct direction\nBall.prototype.move = function (deltaTime) {\n\tvar velocityScale = deltaTime/NORMAL_FRAME_TIME_DELTA;\n\tvar deltaX = this.velocity[0] * velocityScale;\n\tvar deltaY = this.velocity[1] * velocityScale;\n\tthis.position = [this.position[0] + deltaX, this.position[1] + deltaY];\n\t\t//Shoul I move then update speed or update speed then move\n\t\t//No this is wrong I think\n\t// this.inPocket\n\tthis.tableFriction(deltaTime);\n\tthis.railCollision();\n};\n\nBall.prototype.tableFriction = function (deltaTime) {\t\n\t// var xVelocity = this.directionFriction(this.velocity[0], deltaTime);\n\t// var yVelocity = this.directionFriction(this.velocity[1], deltaTime);\n\tvar frictionVector = Util.scale(this.velocity, -1 * GRAVITY*BALL_TABLE_FRICTION*deltaTime);\n\tvar resultantVector = Util.add(frictionVector, this.velocity);\n\t// var xVelocityRatio = xVelocity/this.velocity[0];\n\t// var yVelocityRatio = yVelocity/this.velocity[1];\n\t// var frictionCorrectionX = xVelocityRatio < 0  ? 0 : xVelocity;\n\t// var frictionCorrectionY =\tyVelocityRatio < 0  ? 0 : yVelocity;\n\t// this.velocity = [frictionCorrectionX, frictionCorrectionY];\n\tthis.velocity = resultantVector;\n};\n\n// Ball.prototype.directionFriction = function (velocityComponent, deltaTime) {\n// \tif (velocityComponent < 0) {\n// \t\treturn velocityComponent + GRAVITY*BALL_TABLE_FRICTION*deltaTime;\n// \t} else if (velocityComponent > 0) {\n// \t\t\treturn velocityComponent - GRAVITY*BALL_TABLE_FRICTION*deltaTime;\n// \t\t} else {\n// \t\t\t\treturn velocityComponent;\n// \t\t\t}\n// };\n\nBall.prototype.railCollision = function () {\n\tvar reflection = this.game.isOutOfBounds(this);\n\tif (reflection) {\n\t \tvar xVelocity = reflection[0]*(this.velocity[0]*BALL_BALL_RESTITUTION); //TIMES REBOUND this may result in only one velocity component being reversed in direction, depending on which wall it hits;\n\t \t// get angle from object direction, rebound angle = 180 - theta\n\t \tvar yVelocity = reflection[1]*(this.velocity[1]*BALL_BALL_RESTITUTION); //TIMES ANGLE OF COLLISION;\n\t \tthis.velocity = [xVelocity, yVelocity];\n\t}\n};\n\nBall.prototype.ballCollision = function (otherInitialVelocity, otherPosition) {\n\t// var rotatedThisVelocity = \n\t// \tUtil.rotateVelocity(this.velocity, this.position, otherPosition);\n\t// var rotatedOtherVelocity = \n\t// \tUtil.rotateVelocity(otherInitialVelocity, otherPosition, this.position);\n\tvar shiftedVelocity = \n\t\tUtil.velocityShift(this.velocity, otherInitialVelocity, this.position, otherPosition);\n\t// var xVelocity = \n\t// \t0.5*(rotatedOtherVelocity[0]*(1 + BALL_BALL_RESTITUTION) + \n\t// \t\t\t rotatedThisVelocity[0]*(1 - BALL_BALL_RESTITUTION));\n\n\t// var yVelocity =\n\t// \t 0.5*(rotatedOtherVelocity[1]*(1 + BALL_BALL_RESTITUTION) + \n\t// \t\t\t\trotatedThisVelocity[1]*(1 - BALL_BALL_RESTITUTION));\n\t// var xVelocity = \n\t// \t0.5*(rotatedOtherVelocity[0]*(1 + BALL_BALL_RESTITUTION) + \n\t// \t\t\t rotatedThisVelocity[0]*(1 - BALL_BALL_RESTITUTION));\n\n\t// var yVelocity =\n\t// \t 0.5*(rotatedOtherVelocity[1]*(1 + BALL_BALL_RESTITUTION) + \n\t// \t\t\t\trotatedThisVelocity[1]*(1 - BALL_BALL_RESTITUTION));\n\t// console.log('Initial of ' + this.number + ' ' + \"was\" + this.velocity);\n\t// console.log('Velocity of ' + this.number + ' ' + this.color + ' is ' + [xVelocity, yVelocity]);\n\t// console.log('______________________________________________________')\n\t// var rotatedAfterVelocity = [xVelocity, yVelocity]\n\t// var cartesianVelocity = Util.rotateVelocity(rotatedAfterVelocity, this.position, otherPosition)\n\t// console.log(this.velocity)\n\t// this.velocity = [xVelocity, yVelocity];\n\tthis.velocity = Util.subtract(this.velocity, shiftedVelocity);\n};\n\n\n// Ball.prototype.remove = function () {\n// \tthis.game.remove(this);\n// };\n\nmodule.exports = Ball;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ball.js\n ** module id = 2\n ** module chunks = 0\n **/","var Util = {\n\tdirection: function (vector) {\n\t\tvar norm = Util.norm(vector);\n\t\treturn Util.scale(vector, 1/norm);\n\t},\n\n\tdistance: function (pos1, pos2) {\n\t\tvar xSquared = Math.pow(pos1[0] - pos2[0], 2);\n\t\tvar ySquared = Math.pow(pos1[1] - pos2[1], 2);\n\t\treturn Math.sqrt(xSquared + ySquared);\n\t},\n\n\tnorm: function (vector) {\n\t\treturn Util.distance([0, 0], vector);\n\t},\n\n\tscale: function (vector, factor) {\n\t\tvar scaled = [vector[0]*factor, vector[1]*factor];\n\t\treturn scaled;\n\t},\n\n\tunitVector: function (vector) {\n\t\tvar factor = Util.norm(vector);\n\t\treturn Util.scale(vector, 1/factor);\n\t},\n\n\tadd: function (vectorA, vectorB) {\n\t\treturn [vectorA[0] + vectorB[0], vectorA[1] + vectorB[1]];\n\t},\n\n\tsubtract: function (vectorA, vectorB) {\n\t\treturn [vectorA[0] - vectorB[0], vectorA[1] - vectorB[1]];\n\t},\n\n\tcollisionAngle: function (positionA, positionB) {\n\t\t\tvar collisionAngle = Math.atan2((positionA[1] - positionB[1]), (positionB[0] - positionA[0])\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\treturn collisionAngle;\n\t},\n\n\tangle: function (position) {\n\t\tif (position[0] === 0 && position[1] === 0) {\n\t\t\treturn Math.atan(1/1);\n\t\t}\n\t\tvar angle = Math.atan( position[0]/(-1*position[1]));\n\t\treturn angle;\n\t},\n\n\tdotProduct: function (vectorA, vectorB) {\n\t\tvar result = vectorA[0]*vectorB[0] + vectorA[1]*vectorB[1];\n\t\treturn result;\n\n\t},\n\n\tangleCorrection: function (vector, angle) {\n\t\tif (angle < 0) {\n\t\t\tangle += 2*Math.PI;\n\t\t\tif (vector[0] < 0) {\n\t\t\t\tangle -= Math.PI;\n\t\t\t}\n \t\t} else {\n\t \t\t\tif (vector[0] < 0) {\n\t \t\t\t\tangle += Math.PI;\n \t\t\t\t}\n \t\t\t}\n \t\treturn angle;\n\t},\n\n\tvelocityShift: function (velocityA, velocityB, positionA, positionB) {\n\t\tvar velocityDiff = Util.subtract(velocityA, velocityB);\n\t\tvar positionDiff = Util.subtract(positionA, positionB);\n\t\tvar dotProduct = Util.dotProduct(velocityDiff, positionDiff);\n\t\tvar positionNorm = Util.norm(positionDiff);\t\t\n\t\tvar velocityScale = (dotProduct)/(Math.pow(positionNorm, 2));\n\t\treturn Util.scale(positionDiff, velocityScale);\n\t}\n\n\n\n\t// rotateVelocity: function (velocityA, positionA, positionB) {\n\t// \tdebugger\n\t// \tvar collisionAngle = Util.collisionAngle(positionA, positionB);\n\t// \tvar angleA = Util.angle(velocityA);\n\t// \t// var angleB = Util.angle(positionB);\n\t// \tvar speed = this.norm(velocityA);\n\t// \tvar rotatedAXVelocity = speed*Math.cos(angleA + collisionAngle);\n\t// \t// var rotatedBXVelocity = velocityB[0]*Math.cos(angleB - collisionAngle);\n\t// \tvar rotatedAYVelocity = -1*speed*Math.sin(angleA + collisionAngle);\n\t// \t// var rotatedBYVelocity = velocityB[1]*Math.cos(angleB - collisionAngle);\n\t// \treturn [rotatedAXVelocity, rotatedAYVelocity];\n\t// },\n\n\n\n};\n\nmodule.exports = Util;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 3\n ** module chunks = 0\n **/","var Util = require('./util');\n\nvar Cue = function () {\n\t// this.position = options.position;\n\t// this.velocity = options.velocity;\n\t// this.radius = RADIUS;\n\t// this.number = options.number;\n\t// this.suit = options.suit;\n\t// this.color = options.color || COLOR;\n\t// this.game = options.game;\n\tthis.color = \"#FFFFF\";\n};\n\nCue.prototype.draw = function (ctx, cueBall, event) {\n\tctx.fillStyle = this.color;\n\tvar cueBallX = cueBall.position[0];\n\tvar cueBallY = cueBall.position[1];\n\tvar cueEndX = event.clientX;\n\tvar cueEndY = event.clientY;\n\tctx.beginPath();\n\tctx.moveTo(0, 0);\n\tctx.lineTo(100, 100);\n\t// ctx.translate( 40, 40 );\n\t// ctx.rect(10,100,10,300);\n\tctx.fill();\n};\n\n// Cue.prototype.listen = function () {\n// \tvar canvas = document.getElementById(\"canvas\");\n// \tcanvas.addEventListener(\"mouseup\", this.capturePositon.bind(this));\n// };\n\n// Cue.prototype.capturePositon = function (event) {\n// \tdebugger\n// };\n\nCue.prototype.place = function (cueBall, ctx) {\n\tvar self = this;\n\tvar canvas = document.getElementById(\"canvas\");\n\tthis.beginCueListener = this.beginCue.bind(this, cueBall);\n\tcanvas.addEventListener(\"mousedown\", self.beginCueListener);\n\tthis.drawListener = this.draw.bind(this, ctx, cueBall);\n\tcanvas.addEventListener(\"mousemove\", self.drawListener);\n};\n\nCue.prototype.beginCue = function (cueBall, event) {\n\tvar canvas = document.getElementById(\"canvas\");\n\tvar self = this;\n\n\tcanvas.removeEventListener(\"mousedown\", self.beginCueListener);\n\n\tthis.velocityListener = this.calculateVelocity.bind(this, cueBall);\n\tcanvas.addEventListener(\"mouseup\", self.velocityListener);\n};\n\nCue.prototype.calculateVelocity = function (cueBall, event) {\n\tvar canvas = document.getElementById(\"canvas\");\n\tvar self = this;\n\n\tcanvas.removeEventListener(\"mouseup\", self.velocityListener);\n\tcanvas.removeEventListener(\"mousemove\", self.drawListener);\n\n\tvar start = cueBall.position;\n\tvar end = [event.clientX, event.clientY];\n\tvar velocity = Util.subtract(start, end);\n\tvar unitVelocity = Util.unitVector(velocity);\n\tvar speed = Util.norm(velocity);\n\tif (speed > 15) {\n\t\tspeed = 15;\n\t}\n\n\tvar scaledVelocity = Util.scale(unitVelocity, speed);\n\tcueBall.velocity = scaledVelocity;\n};\n\nCue.MAX_POWER = 100;\n\n// Cue.prototype.mouseClickTimer = function (option) {\n// \t// document.getElementById(\"canvas\").addEventListener(\"mousedown\");\n// \t// document.getElementById(\"canvas\").addEventListener(\"mouseup\");\n// };\n\nCue.prototype.strikeVelocity = function (power, direction) {\n\tvar cueVelocity = Util.scale(direction, power);\n\treturn cueVelocity;\n};\n\n\nmodule.exports = Cue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/cue.js\n ** module id = 4\n ** module chunks = 0\n **/","var Util = require('./util');\n\nvar Weapon = function (options) {\n\tthis.type = options.type;\n\tthis.game = options.game;\n};\n\nWeapon.prototype.place = function () {\n\tvar canvas = document.getElementById(\"canvas\");\n\tcanvas.addEventListener(\"click\", this.capturePositon.bind(this));\n};\n\nWeapon.prototype.capturePositon = function (event) {\n\tvar canvas = document.getElementById(\"canvas\");\n\tcanvas.removeEventListener(\"click\", this.capturePositon.bind(this));\n\tvar xPosition = event.clientX;\n\tvar yPosition = event.clientY;\n\tvar cueBall = this.game.findBall(0);\n\tif (Util.distance(cueBall.position, [xPosition, yPosition]) < 30) {\n\t\tthis.action([xPosition, yPosition], cueBall);\n\t}\n};\n\nWeapon.prototype.action = function (position, cueBall) {\n\tvar balls = this.getBalls();\n\tballs.forEach(function (ball) {\n\t\t// var randomX = 100*(2*Math.random() - 1);\n\t\t// var randomY = 100*(2*Math.random() - 1);\n\t\t\n\t\tif (ball !== cueBall) {\n\t\t\tvar vectorDiff = Util.subtract(ball.position, cueBall.position);\n\t\t\t// var randomVector = [randomX, randomY];\n\t\t\t// var unitVelocity = Util.unitVector(randomVector);\n\t\t\tvar distanceFrom = Util.norm(vectorDiff);\n\t\t\tvar scaledVelocity = Util.scale(vectorDiff, Math.pow(1/(distanceFrom), 2));\n\t\t\tball.velocity = Util.scale(scaledVelocity, 2000*Math.random());\n\t\t\t// console.log(randomX + ' , ' + randomY);\n\t\t\t// console.log(randomVector);\n\t\t} else {\n\t\t\tvar randomX = 100*(2*Math.random() - 1);\n\t\t\tvar randomY = 100*(2*Math.random() - 1);\n\n\t\t\tvar randomVector = [randomX, randomY];\n\t\t\tvar unitVelocity = Util.unitVector(randomVector);\n\t\t\tball.velocity = Util.scale(unitVelocity, 20*Math.random());\n\t\t}\n\t});\n};\n\nWeapon.prototype.getBalls = function () {\n\tvar ballsInRange = [];\n\tvar allBalls = this.game.balls;\n\tObject.keys(allBalls).forEach(function (idx) {\n\t\t\tballsInRange.push(allBalls[idx]);\n\t});\n\treturn ballsInRange;\n};\n\nmodule.exports = Weapon;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/weapon.js\n ** module id = 5\n ** module chunks = 0\n **/","var GameView = function (game, ctx) {\n\tthis.ctx = ctx;\n\tthis.game = game;\n};\n\n\nGameView.prototype.start = function () {\n\tthis.lastTime = 0;\n\tthis.requestId = requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function (time) {\n\tvar deltaTime = time - this.lastTime;\n\tif (this.game.over) {\n\t\tcancelAnimationFrame(this.requestId);\n\t\tthis.start();\n\t}\n\tthis.game.step(deltaTime, this.ctx);\n\tthis.game.draw(this.ctx);\n\tthis.lastTime = time;\n\n\trequestAnimationFrame(this.animate.bind(this));\n};\t\n\n// GameView.prototype.start = function () {\n// \tvar self = this;\n// \tsetInterval(function () {\n// \t\tself.game.draw(self.ctx);\n// \t\tself.game.step(5, self.ctx);\n// \t}, 5);\n// };\n\nmodule.exports = GameView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}