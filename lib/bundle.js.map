{"version":3,"sources":["webpack:///webpack/bootstrap a464942c16527b2e85f7","webpack:///./lib/billiards.js","webpack:///./lib/game.js","webpack:///./lib/ball.js","webpack:///./lib/util.js","webpack:///./lib/gameView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC,E;;;;;;ACdD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,IAAG;AACH;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;;AAEA;;;;;;;;;ACrDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;AC5GA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACtBA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,G;;AAEA,2B","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a464942c16527b2e85f7\n **/","var Game = require('./game');\nvar GameView = require('./gameView');\n\n\tconsole.log('content loaded');\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\tconsole.log('content loaded');\n\tvar canvasEl = document.getElementsByTagName(\"canvas\")[0];\n\tcanvasEl.width = Game.DIM_X;\n\tcanvasEl.height  = Game.DIM_Y;\n\n\tvar ctx = canvasEl.getContext(\"2d\");\n\tvar game = new Game();\n\tnew GameView(game, ctx).start();\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/billiards.js\n ** module id = 0\n ** module chunks = 0\n **/","var Ball = require('./ball');\n\nvar Game = function () {\n\tthis.balls = [];\n\n\tthis.populateTable();\n};\n\nGame.DIM_X = 500;\nGame.DIM_Y = 1000;\nGame.FPS = 32;\nGame.BG_COLOR = \"#000000\";\n\nGame.prototype.populateTable = function (object) {\n\tvar game = this;\n\tfor (var i = 0; i < 10; i++) {\n\t\tvar suit;\n\t\tif (i === 0) {\n\t\t\tsuit = \"cue\";\n\t\t} else if (i < 9 ) {\n\t\t\t\tsuit = \"solid\";\n\t\t\t} else {\n\t\t\t\t\tsuit = \"striped\";\n\t\t\t\t}\n\t\tthis.balls.push(new Ball(\n\t\t\t{\n\t\t\t\tposition: [0, i],\n\t\t\t\tvelocity: [i, 0],\n\t\t\t\tnumber: i,\n\t\t\t\tsuit: suit,\n\t\t\t\tgame: game\n\t\t\t}\n\n\t\t));\n\t}\n};\n\nGame.prototype.step = function () {\n\tthis.balls.forEach(function (ball) {\n\t\tball.move();\n\t});\n};\n\nGame.prototype.draw = function (ctx) {\n\tctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\tctx.fillStyle = Game.BG_COLOR;\n\tctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n\tthis.balls.forEach(function (ball) {\n\t\tball.draw(ctx);\n\t});\n};\n\nmodule.exports = Game;\n \n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","var Util = require('./util');\n\nvar RADIUS = 25;\nvar GRAVITY = 3209;\nvar COLOR = \"#ffffff\";\n\nvar Ball = function (options) {\n\tthis.position = options.position;\n\tthis.velocity = options.velocity;\n\tthis.radius = options.radius;\n\tthis.number = options.number;\n\tthis.suit = options.suit;\n\tthis.game = options.game;\n};\n\n// i = 0 is white ball\n\nBall.prototype.collideWith = function (otherBall) {\n\n};\n\nBall.prototype.draw = function (ctx) {\n\tctx.fillStyle = COLOR;\n\n\tctx.beginPath();\n\tctx.arc(\n\t\tthis.pos[0], this.pos[1], RADIUS, 0, 2 * Math.PI, true\n\t);\n\tctx.fill();\n};\n\nBall.prototype.isCollidedWith = function (otherBall) {\n\tvar distanceBetween = Util.distance(this.position, otherBall.position);\n\treturn distanceBetween < (this.radius + otherBall.radius);\n};\n\n// http://billiards.colostate.edu/threads/physics.html\nvar NORMAL_FRAME_TIME_DELTA = 1000/60;\nvar BALL_TABLE_FRICTION = 0.2;\n// or var TABLE_FRICTION = rand(0.15, 0.4)\n// add ball-ball FRICTION = rand(0.03, 0.08)\n// add ball-cue FRICTION = 0.6\n// add ball-rail FRICTION = ball-table friction (i.e. sliding along)\nvar BALL_RAIL_RESTITUTION = 0.75;\n// var BALL_RAIL_RESTITUTION = rand(0.6 - 0.9)\nvar BALL_BALL_RESTITUTION = 0.95;\n// var BALL_BALL_RESTITUTION = rand(0.92 - 0.98)\nvar BALL_CUE_RESTITUTION = 0.84;\n// var BALL_CUE_RESTITUTION = rand(0.81 - 0.87);\n// touch: 1.5 mph = 2.2 fps\n// slow: 3 mph = 4.4 fps\n// medium-soft: 5 mph = 7.3 fps\n// medium: 7 mph = 10 fps\n// medium-fast: 8 mph = 12 fps\n// fast: 12 mph = 18 fps \n// power: 15-20 mph = 22-29 fps\n// powerful break: 25-30 mph = 36-44 fps\n// gravity = 9.8 m/s \n// gonna need to track direction, so that I can decrease velocity in the correct direction\n\n\nBall.prototype.move = function (timeDelta) {\n\tvar velocityScale = timeDelta/NORMAL_FRAME_TIME_DELTA;\n\tvar deltaX = this.velocity[0] * velocityScale;\n\tvar deltaY = this.velocity[1] * velocityScale;\n\t\t//Shoul I move then update speed or update speed then move\n\t\t//No this is wrong I think\n\t// this.inPocket\n\tthis.tableFriction();\n\tthis.ballCollision();\n\tthis.railCollision();\n};\n\nBall.prototype.tableFriction = function () {\n\tvar xVelocity = this.directionFriction(this.velocity[0]);\n\tvar yVelocity = this.directionFriction(this.velocity[1]);\n\tthis.velocity = [xVelocity, yVelocity];\n};\n\nBall.prototype.directionFriction = function (velocityComponent) {\n\tif (velocityComponent < 0) {\n\t\treturn velocityComponent + GRAVITY*BALL_TABLE_FRICTION;\n\t} else if (velocityComponent > 0) {\n\t\t\treturn velocityComponent - GRAVITY*BALL_TABLE_FRICTION;\n\t\t} else {\n\t\t\t\treturn velocityComponent;\n\t\t\t}\n};\n\nBall.prototype.railCollision = function () {\n\tif (this.game.isOutOfBounds(this.position)) {\n\t \tvar xVelocity = -(this.velocity[0]*BALL_BALL_RESTITUTION) //TIMES REBOUND this may result in only one velocity component being reversed in direction, depending on which wall it hits;\n\t \t// get angle from object direction, rebound angle = 180 - theta\n\t \tvar yVelocity = (this.velocity[1]*BALL_BALL_RESTITUTION) //TIMES ANGLE OF COLLISION;\n\t}\n};\n\nBall.prototype.ballCollision = function (otherBall) {\n\tvar xVelocity = otherBall.velocity[0]*(1 - BALL_BALL_RESTITUTION) + \n\t\t\t\t\t\t\t\t\tthis.velocity[0]*(1 + BALL_BALL_RESTITUTION);\n\tvar yVelocity = otherBall.velocity[1]*(1 - BALL_BALL_RESTITUTION) + \n\t\t\t\t\t\t\t\t  this.velocity[1]*(1 + BALL_BALL_RESTITUTION);\n\tthis.velocity = [xVelocity, yVelocity];\n};\nBall.prototype.remove = function () {\n\tthis.game.remove(this);\n};\n\nmodule.exports = Ball;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ball.js\n ** module id = 2\n ** module chunks = 0\n **/","var Util = {\n\tdirection: function (vector) {\n\t\tvar norm = Util.norm(vector);\n\t\treturn Util.scale(vector, 1/norm);\n\t},\n\n\tdistance: function (pos1, pos2) {\n\t\tvar xSquared = Math.pow(pos1[0] - pos2[0], 2);\n\t\tvar ySquared = Math.pow(pos1[1] - pos2[1], 2);\n\t\treturn Math.sqrt(xSquared + ySquared);\n\t},\n\n\tnorm: function (vector) {\n\t\treturn Util.distance([0, 0], vector);\n\t},\n\n\tscale: function (vector, factor) {\n\t\tvar scaled = [vector[0]*factor, vector[1]*factor];\n\t\treturn scaled;\n\t}\n};\n\nmodule.exports = Util;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 3\n ** module chunks = 0\n **/","var GameView = function (game, ctx) {\n\tconsole.log('building game view')\n\tthis.ctx = ctx;\n\tthis.game = game;\n};\n\n\nGameView.prototype.start = function () {\n\tthis.lastTime = 0;\n\trequestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function (time) {\n\tvar deltaTime = time = this.lastTime;\n\n\tthis.game.step(deltaTime);\n\tthis.game.draw(this.ctx);\n\tthis.lastTime = time;\n\n\trequestAnimationFrame(this.animate.bind(this));\n};\t\n\nmodule.exports = GameView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}